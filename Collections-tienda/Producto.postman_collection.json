{
	"info": {
		"_postman_id": "5b0bdce2-c33d-4541-90e2-7b372c471573",
		"name": "Producto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37902422"
	},
	"item": [
		{
			"name": "Crear un producto válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"producto_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Chocorramo\",\r\n    \"precio\": 5000,\r\n    \"tipo\": \"Perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un producto inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"El tipo del producto no es el esperado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Chocorramo\",\r\n    \"precio\": 5000,\r\n    \"tipo\": \"Otro tipo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los productos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un producto por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un producto por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"El producto con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un produto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"gansito\",\r\n    \"precio\": 2000,\r\n    \"tipo\": \"No Perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un produto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"El producto con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"gansito\",\r\n    \"precio\": 2000,\r\n    \"tipo\": \"No Perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un producto por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un producto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"El producto con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	]
}