{
	"info": {
		"_postman_id": "d84d412c-b11c-4cf4-96ff-4f467067f582",
		"name": "Producto-tienda",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37902422"
	},
	"item": [
		{
			"name": "Agregar una nueva tienda a las oferentes del producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas/{{tienda_id}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar una tienda que no existe a las oferentes de un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"La tienda con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas las tiendas que ofrecen un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una tienda que ofrece un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas/{{tienda_id}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una tienda que ofrece un producto que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"El producto con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/00000000-0000-0000-0000-000000000000/tiendas/{{tienda_id}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"00000000-0000-0000-0000-000000000000",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar las tiendas que ofrecen un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"nombre\": \"tienda marco\",\r\n        \"ciudad\": \"SMA\"\r\n    }\r\n]\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar las tiendas que ofrecen un producto, con una tienda inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"La tienda con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"nombre\": \"tienda marco\",\r\n        \"ciudad\": \"SMA\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una tienda que ofrece un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas/{{tienda_id}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una tienda que no ofrece un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"La tienda con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/productos/{{producto_id}}/tiendas/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	]
}